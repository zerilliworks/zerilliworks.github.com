<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Zerillian Engineering]]></title>
  <link href="http://blog.zerilliworks.net/atom.xml" rel="self"/>
  <link href="http://blog.zerilliworks.net/"/>
  <updated>2013-03-30T00:08:16-04:00</updated>
  <id>http://blog.zerilliworks.net/</id>
  <author>
    <name><![CDATA[Armand Zerilli]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[I'm Here for the Evolution]]></title>
    <link href="http://blog.zerilliworks.net/blog/2013/03/28/im-here-for-the-evolution/"/>
    <updated>2013-03-28T04:47:00-04:00</updated>
    <id>http://blog.zerilliworks.net/blog/2013/03/28/im-here-for-the-evolution</id>
    <content type="html"><![CDATA[<p>I never really addressed this, so I&#8217;ll do it now. I&#8217;ve been programming as an amateur for a long time. I&#8217;m almost 20, and it&#8217;s really grown into my primary focus over the last few years. I&#8217;d like to share what led up to the starting of this blog. It&#8217;s only a part of a big change for me.</p>

<!-- more -->


<h2>It started with a startup.</h2>

<p>Early last year, I began working for a startup company here in Ithaca. A bright and clever young team with a great idea and unstoppable motivation. We were little guys trying to launch a new film distribution company. For other little guys, too: Independent filmmakers.</p>

<p>It was a business forged from passion. We were all film buffs and attended film school, which means we had all seen some gems get passed over and lost in even niche film interest groups. Seriously, high-caliber films made by incredibly smart people. We couldn&#8217;t believe they weren&#8217;t more popular. We watched every film we acquired, and movie night came right after every meeting.</p>

<p><span class='pullquote-right' data-pullquote='It was absolutely thrilling.'>
I was their only software developer. We were just getting started, and funding was still iffy, but we worked tirelessly. I was given complete control over the technology, and I had never had such a big responsibility. It was absolutely thrilling. If I wanted to ship a new feature, I didn&#8217;t ask anybody. As long as I kept my priorities straight, I could implement whatever I wanted. They trusted me with their website, and I took good care of it.
</span></p>

<p>We continued acquiring films and building features and spreading the word. We actually landed some award-winning short films in the beginning, personally vetted by each of us. We went to Tribeca and interviewed with startup incubators. This was a startup in every sense of the word, and that was totally new to me. It was beyond exciting.</p>

<p><span class='pullquote-right' data-pullquote='I still get poignant flashbacks when I say that things turned sour.'>
I still get poignant flashbacks when I say that things turned sour. I was literally losing my mind from the stress and we began to shed some connections from circumstances beyond our control. I snapped after a heated exchange with my partners wherein I learned we severely differed on some core principles, which I felt morally opposed to. Things started to get fishy, and I had to leave. Not only was my health degrading, but I discovered a shocking truth that day. These were good people, but the chemistry turned out to be completely wrong. After parting ways, everything fell apart. The company made a failed attempt at crowd-sourced funding and garnered only lukewarm reception in a film festival partnership. Sometimes I felt like I let a lot of people down. I felt like the biggest failure imaginable. I had never been more lost or embarrassed.
</span></p>

<p>All things considered, it was actually a burnout waiting to happen. I couldn&#8217;t have kept that work up. No one could for long. We weren&#8217;t doing it quite right. It felt like a part of me died when the company crumbled, and it still bothers me to this day.</p>

<p>I lapsed into seclusion. I kept programming, but I did it behind closed doors. I continued to teach myself as I typically did, but there was always something nagging me with every method I wrote. Something that told me I should be ashamed of what I was doing, that somehow it wasn&#8217;t good enough. It was so bad some days that I would start up my IDE and stare at the new project wizard for a minute before quitting it and watching television. I was afraid to even start something.</p>

<p>The failure of that startup really got to me. I may not have invested much more than time, but it hurt a lot. I didn&#8217;t consult with anybody. And sometimes I lied about it. That nagging voice telling me I wasn&#8217;t perfect degraded the quality of my work. I let things slide because I was always doubting myself. I tried again and again to produce marketable ideas, but just couldn&#8217;t make them work. I felt dead-ended. I have struggled with depression before, and it made a strong resurgence during this period. I had never felt lower.</p>

<p><span class='pullquote-right' data-pullquote='As it turns out, every problem I faced could somehow or another be traced back to my isolated nature.'>
Around Christmas last year, things finally started to change. I produced a solid idea, one that I found useful and relevant, something I was compelled to work on. I kept hitting some roadblocks, which prompted me to do a little thinking about what was sticking its thorns in me. As it turns out, every problem I faced could somehow or another be traced back to my isolated nature.
</span></p>

<p>I had been social, of course, but my work was secret. I was afraid of sharing anything. I realized that had to change.</p>

<p>I perused forums, I signed up for mailing lists and message boards. I signed up for Github and put up a repository of my own. Even though that repository was pretty worthless, it was a symbolic step for me. <a href="http://blog.zerilliworks.net/projects/shadowcv">That project was one of my first</a>, and now there is nothing to hide about it. I hadn&#8217;t been very open before, so I&#8217;m taking more steps now. I&#8217;ve also netted myself an account with a hip new programmer&#8217;s network called <a href="http://koding.com">Koding.</a> I&#8217;m asking questions and seeking advice. I really want to be the best programmer I can, and I know that&#8217;s impossible if I stay in my bubble. No matter how good I get at Trivial Pursuit while I&#8217;m here.</p>

<p>This blog may be unremarkable on the scale of the Internet, but it is <em>huge</em> for me. Maybe my ideas really are unique and interesting. Maybe I&#8217;ll make a connection to someone that kicks my ass and changes the way I think forever. And what if by letting go of my comforting solitude I flourish enough to create the systems I dream about? I would be crazy ignore these possibilities.</p>

<p>The people that know me personally might find me socially capable and outgoing. In many cases that&#8217;s true. But professionally and with my work, I never talked to anyone seriously. I had chats about what I do, but I couldn&#8217;t connect. I am hoping that changes.</p>

<p><span class='pullquote-right' data-pullquote='I don&#8217;t want to cover up my weaknesses anymore.'>
So here I am. I&#8217;ve accepted my past shortcomings and I&#8217;m playing to my strengths. I don&#8217;t want to cover up my weaknesses anymore. I want to bring them into the light and be realistic about them. If I can fill in these weaknesses, I will. Even if I can&#8217;t, I&#8217;ll gain insight into the ways I can best support my work and the work of those I collaborate with.
</span></p>

<p>As I say often, all I&#8217;ve ever wanted to do is help people, and that means accepting help when I need it.</p>

<p>I am beyond grateful for any advice I get through the things I write and I can&#8217;t be appreciative enough of the time anyone spends helping me. I realize now that we&#8217;re all in this together, and being a vigilante was crippling me. I need to embrace the world, and I&#8217;ve been truly inspired by a lot of really smart programmers and genuine technologists who are all looking to improve the world around them. I&#8217;ve probably sent you emails at some point or another, you know who you are. Thank you. Truly.</p>

<p>That&#8217;s why I do this. I want to learn. I do this for me right now, but I hope that it may help others and eventually become a channel through which I can return the favors I&#8217;ve been granted.</p>

<h2>Hello, world. I&#8217;m Armand. And I&#8217;m here to evolve.</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cry Me a River, Emails]]></title>
    <link href="http://blog.zerilliworks.net/blog/2013/03/26/cry-me-a-river-emails/"/>
    <updated>2013-03-26T00:59:00-04:00</updated>
    <id>http://blog.zerilliworks.net/blog/2013/03/26/cry-me-a-river-emails</id>
    <content type="html"><![CDATA[<h3>Or: Why You Should NEVER Make Robots Fake Sincerity</h3>

<p>While helping a friend construct a website, I signed up for Weebly. I didn&#8217;t even have a website, I was just a collaborator. I didn&#8217;t want anything to do with Weebly. For some reason, she began getting uncomfortably clingy. Look at this as an example of how to creep out your customers.</p>

<!-- more -->


<p>I&#8217;ll be clear now that I do not like drag-and-drop site builders. Only one such service have I ever described in terms that may be optimistically construed as &#8220;fond&#8221; &#8211; that service being Squarespace. And that&#8217;s only because they opened up their internals to developers.</p>

<p>So have a look at this.</p>

<p><img src="http://blog.zerilliworks.net/images/articles/Weebly-Believing.png" title="Don't stop believin' (in your website)" ></p>

<p><a href="http://blog.zerilliworks.net/extras/weebly-believing.html/">If you can&#8217;t see the image, click here for the text version.</a></p>

<p>The time since I signed up is probably the second worst thing about this. It&#8217;s just odd. It reminds me that there is some task somewhere (clearly not a human) that is looking over less-than-frequently-active accounts and telling them to get going. It&#8217;s unbelievably insincere, and it&#8217;s frankly a little condescending. How so?</p>

<blockquote><p>Maybe you got busy and forgot about your website. We understand. When you signed up you probably had a vision for your site. We want to help you make that a reality. We promise that Weebly truly is the easiest way to create a website.</p></blockquote>

<p>Of course I had a vision. Perhaps I own a business, I sell goods, I&#8217;m an artist, I&#8217;m a traveller, I&#8217;m a game show contestant with a penchant for blogging. What&#8217;s gonna matter is my content. If I&#8217;m passionate enough, I&#8217;ll find the best way to present it. I am disinclined to believe that anyone who has any real desire to run a website would forget about it for 29 days, 16 hours, 7 minutes and 47 seconds.</p>

<p>This helpful message is a little too chummy. It is certainly not sincerely endorsed by the Weebly Team, it was sent by a robot that&#8217;s been told how to sound friendly. A person wrote generic text without much thought and I was on the receiving end of a template engine fed with those words. Nothing really makes me feel less cared for than robots acting like people. Giving them a little personality can be okay, but this is kind of insulting. Is your team actually nervous that I might not realize the full potential of my business? That&#8217;s something investors worry about. And something robots think nothing of.</p>

<p>Then this happens:</p>

<p><img src="http://blog.zerilliworks.net/images/articles/Weebly-Sniffle.png" title="Sniffle. Sniffle..." ></p>

<p><a href="http://blog.zerilliworks.net/extras/weebly-sniffle.html/">If you can&#8217;t see the image, click here for the text version.</a></p>

<p>The subject of this message was literally &#8220;That&#8217;s sad.&#8221; No, this email is the sad thing. You trained machines to sound sympathetic, and it&#8217;s just unsettling to make them cry. <em>For the love of God, knock it off.</em> There&#8217;s nothing wrong with the concept of automated messages. But <em>please</em> do not make them f&#8211;king cry. That does not make me feel cared for. Your team doesn&#8217;t seem to be there for me, it seems like you need to clutch your flaky customers in a death grip.</p>

<p>Don&#8217;t fret though, you fantastically sincere liars, I think this email could be fixed pretty easily.</p>

<p><img src="http://blog.zerilliworks.net/images/articles/Weebly-Sniffle-fixed.png" title="Just take a Sharpie to it." ></p>

<p>There. That&#8217;s basically free advice, Weebly. If your team is feeling sincere and nervous and sympathetic, my typical consulting fee is $17,000.</p>

<p>For the record, one of their founders eventually sent me a personal email asking for feedback. Way to go, fellas. That&#8217;s where you lay on the charm, in the actual exchanges between actual people. That redeemed their support team a bit. That was someone who was really wondering what went wrong and wanted to find a solution. I&#8217;m not being sarcastic there, if you&#8217;re looking to connect with a customer, a real live human being is the way to do it. I absolutely love that.</p>

<p>Sending automated emails that cry is tantamount to deception. That&#8217;s what I have to say to them.</p>

<p>I can&#8217;t be the only person that feels this way. I very highly value genuine interactions, and pretty much any attempt to imbue emotion without real effort is simply insulting to me.</p>

<p>Seriously, without the mendacious nervousness and sniffles, these would be just helpful emails. I might have read them without rolling my eyes.</p>

<p>If you&#8217;re someone who also dislikes this sort of indiscretion, I&#8217;d appreciate a comment so I know I&#8217;m not alone.</p>

<p>Also, if you happen to be an English professor and would like to tell me whether I should have used <em>whom</em> in that last sentence, I would appreciate it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Complicated or Other Kind of Complicated?]]></title>
    <link href="http://blog.zerilliworks.net/blog/2013/03/17/complicated-or-other-kind-of-complicated/"/>
    <updated>2013-03-17T03:01:00-04:00</updated>
    <id>http://blog.zerilliworks.net/blog/2013/03/17/complicated-or-other-kind-of-complicated</id>
    <content type="html"><![CDATA[<p>I make a lot of choices while working on a project, mostly a large collection of tiny architectural choices that will impact how I build my applications. The words  <em>simple</em> and <em>complicated</em>, I&#8217;ve found, are very deceptive blanket statements. Sometimes, I have to trade off different kinds of complexity that add upp to the greatest efficiency versus smallest amount of frustration.</p>

<!-- more -->


<h2>Sometimes You Can&#8217;t Win.</h2>

<p>There are so many different ideas about the easiest/best/fastest/simplest way to do things. Seems like everyone&#8217;s got a philosophy. <strong>NOW, THERE IS NOTHING INHERENTLY WRONG WITH THAT.</strong> I&#8217;ve got my own little bubble of philosophy I like to stick to. The unfortunate part is that there is a pretty wide spectrum of impresicse language that <a href="http://en.wikipedia.org/wiki/Wikipedia:Manual_of_Style/Words_to_watch#Puffery">attribute ambiguous meaning to ideas without much factual support.</a></p>

<p>I&#8217;ll give an example. I&#8217;m laying out all the bits and pieces of a medical app right now, and I&#8217;m at the pivotal point of getting to pick what language and framework I&#8217;ll be using. I&#8217;ve surveyed a bunch of web technologies to choose the best <em>(with &#8220;best&#8221; being a relative term).</em></p>

<p>Everybody wants simplicity, but be aware what you may be trading it for. In my case, I&#8217;m choosing between PHP with the <a href="http://laravel.com/">Laravel</a> framework or Ruby on Rails. Familiarity is the big discrepancy. Both parties have proponents and those who preach the beautiful elegance of their respective platform. But PHP is at heart an icky language and I know little about serious use of Ruby at this point. <strong>DAMN.</strong></p>

<p>And when they dangle s&#8211;t like this in front of you:</p>

<p><img src="http://blog.zerilliworks.net/images/articles/rails.png" alt="Ruby on Rails homepage banner" /></p>

<p><strong>WHO COULD POSSIBLY RESIST?</strong></p>

<p>Tread lightly, Armand. Don&#8217;t get caught up in the sparkling beauty of these systems. Remember that something&#8217;s gotta give and to barter for the kind of complexity you can handle best.</p>

<p>I know PHP and Laravel very well, meaning I could get straight to work building the app. Rails seems super slick, though I admittedly know little about it. I&#8217;d have to learn everything while I work. As I mentioned in <a href="http://blog.zerilliworks.net/blog/2013/03/09/preeow/">my introductory post</a>, I love learning, but I take my sweet time to get the in-depth understanding I desire.</p>

<p>I get easily flustered when I begin to subscribe to everyone&#8217;s callouts regarding the streamlined versus the intricate. Not all complications have to be crippling, but be sure to pick them carefully. Until we start writing our apps with LOVE (<a href="http://worldofgoo.wikia.com/wiki/MOM"><em>a new scripting language where you write applications using &#8216;feelings&#8217;</em></a>) I believe these sorts of choices will continue to thornily remind us of their irksomeness.</p>

<p>Pick your manifold code-wads with care.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why Octopress?]]></title>
    <link href="http://blog.zerilliworks.net/blog/2013/03/16/why-octopress/"/>
    <updated>2013-03-16T14:40:00-04:00</updated>
    <id>http://blog.zerilliworks.net/blog/2013/03/16/why-octopress</id>
    <content type="html"><![CDATA[<p>I could have just tossed a WordPress installation up somewhere. It probably would have taken less time
to set up. But I&#8217;m not a big fan of WordPress. I&#8217;m not a big fan of anything that needs extra plugins to
be reasonably secure. I like fast and simple. AND NOW HERE I AM.</p>

<!-- more -->


<p>Any seasoned (or even soft-boiled) developer realizes the potential of the terminal. I&#8217;m not an average
web user. I shouldn&#8217;t have to learn the lingo of the CMS du-jour. if I want to build a good site or blog. I
should be able to use basically three skills: Git, Markdown, and the terminal. No dicking through page
after page of backend material. I already know these things, and they have proven themselves as my most
enjoyable tools to use.</p>

<p>I also wanted this blog to be fast. Software like WordPress, Movable Type, MojoMotor, Drupal&#8230; They&#8217;re
burdened with significant overhead of processing and delivering pages. Some have plugins to help, but
I think that we shouldn&#8217;t even need them. Why would you ship a slow product and have third parties make
it safe and efficient? Seems like skipping a step.&dagger;</p>

<p>I don&#8217;t want to pick on WordPress too much. Automattic is a neat company and deserves respect for making
blogging and site creation so accessible. For me, it became less efficient once I &#8220;knew better.&#8221;</p>

<p>So here I am working with Octopress. I get to tap out Markdown without needing a web-based WYSIWYG editor
and type a command to send everything up to the free Github Pages service. This blog is what I&#8217;d call
&#8220;TV Magic.&#8221; Like on cooking shows. All of the same things happen here that would happen on a dynamic
site, just done beforehand so they come out quick. Similar to the ways Emeril Lagasse has his roasts
roasting an hour before the show. Just when they&#8217;re ready, it&#8217;s <em>Bam</em> and we have dinner.</p>

<p>Octopress is wonderful software, and definite props to Brandon Mathis for his work making Jekyll friendly.
Good sir, you&#8217;re the only reason I actually had enough fun putting up a blog to&#8230; Well, put up a blog.</p>

<p><a href="http://octopress.org">Octopress - A blogging framework for hackers</a></p>

<p>At the end of the day, roasting my roasts in advance means low overhead, faster requests, and simple
hosting. I&#8217;m a PHP programmer for sure, and I know there are things PHP and its derivative frameworks
are good at.</p>

<p>Simple blogging just isn&#8217;t putting PHP&#8217;s best foot forward.</p>

<p>&dagger; <em>Yeah, ORACLE.</em></p>

<p><em>Note: Edited for spelling/grammar on March 21, 2013</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Preeow, Universe.]]></title>
    <link href="http://blog.zerilliworks.net/blog/2013/03/09/preeow/"/>
    <updated>2013-03-09T02:23:00-05:00</updated>
    <id>http://blog.zerilliworks.net/blog/2013/03/09/preeow</id>
    <content type="html"><![CDATA[<p>I&#8217;ve heard that one of the big things that separates mediocre programmers from
good ones is blog writing. Participation in the open source scene is huge as well,
but getting people to listen to you is eye-opening and empowering. At least, I feel
that it is. Sharing of information is what makes the Web remarkable. If I have
things to contribute, I think I should get them out there.</p>

<!--more-->


<h2>Allow Me to Introduce Myself.</h2>

<p><em>My name is Armand.</em> I&#8217;m a quirky round-faced ball of enthusiasm and big time
programming enthusiast. I&#8217;ve been writing code for the better part of my life, in
some form or another. I decided to make Web programming my specialty after I taught
myself PHP and witnessed the power I immediately channeled with just a text editor.</p>

<p>All I&#8217;ve ever really wanted to do is help people, and creating systems for the Web
fascinates me. I may have the opportunity to share what I have to offer with a lot
of people. It&#8217;s a much larger scale than fixing computers, which I always thought
was a pain in the ass.</p>

<p>My old boss told the old joke,</p>

<blockquote><p>How many programmers does it take to screw in a lightbulb? None, that&#8217;s a hardware problem!</p></blockquote>

<p>Oh, how we laughed.</p>

<p>So in the same ways I&#8217;ve taken on a DIY attitude, I&#8217;ve taught myself everything I
know about these electric beasts. They are deeply fascinating to me. I&#8217;ve seen more
than a handful of bright-eyed young programmers showcase what I call hollow talent.
It&#8217;s similar to how you might bulls&#8211;t someone you&#8217;re talking to such that you
appear to be informed about the topic at hand. Sadly, a lot of this fresh talent is
built on looking up into higher constructs while not understanding the activity
that drives them.</p>

<p>My first programming experience came while learning about robotics in a summer-camp
sort of program. I was just about twelve, and we had a lot to play with. They had
those nifty Lego robitcs sets, sure. But the real pleasure was working with a real
machine; the <em>Parallax BASIC Stamp</em> was the first real computer I&#8217;ve ever bossed
around.</p>

<p>On a microcontroller, you don&#8217;t get any help. There are functions and implementations
that keep your hardware afloat, and that&#8217;s it. No standard
libraries. All you have is math and memory access, essentially. That was my boot
camp.</p>

<p>I learned to have fun with the BASIC Stamp, simple as they were. Most of it was
the fact that transferring a program to the little EEPROM on these robots would
immediately bring them to life. I&#8217;d get to tweak and test continually, and it was
endlessly entertaining. This is probably where I established by preferred development
paradigm: Test-driven development.</p>

<p>I taught myself about the implementation of many simple algorithms, since there was
no hand-holding in PBASIC (Parallax&#8217;s extension of BASIC adding microcontroller-specific
constructs). Step by step, I built up core computer science knowledge, almost
without knowing it. All that really mattered was that I was getting to do new things
with what I learned. Learning enabled a unique kind of excitement for me, and I
never lost the desire to learn. The self-teaching process, though frustrating at
times, is still the activity I find most rewarding.</p>

<p>I kept it rolling, picking up C++ while I worked with openFrameworks (which was unbelievably
fun) and later PHP, where I got my foundation in web programming. HTML, CSS, JavaScript&#8230;
They all came along with it. And now I&#8217;m further pushing my boundaries in the web with
languages like Ruby and Erlang. I was never much a fan of Python, but to be fair I never
gave it a thorough try.</p>

<p>And these all just barely scratch the surface. I have so much more to illuminate.</p>

<p>I tend not to think in absolutes. There are some issues that polarize me, but I&#8217;ve
always been a rather open-minded individual. I contrast this to a majority of tech
bloggers whom are opinionated, stubborn, and elitist. I&#8217;ll admit that these are
sometimes positions that are easy to settle into, which is perhaps why people become
such binary thinkers with little awareness to the fact.</p>

<p>There is so much to experience in the world of technology, that I&#8217;ve found it far
more enjoyable to explore and absorb new ideas. Odd as this may sound, I try to never
think that I&#8217;m doing something right. It doesn&#8217;t mean I think I&#8217;m wrong. It means I
don&#8217;t hold my methods as perfect or authorotative. There&#8217;s often a better way to do
things. Even if I&#8217;m solving a problem to the best of my ability or in the best
possible way, I like to remain aware of and receptive to concepts carried in on the
intermittent gusts of fresh air.</p>

<p>All of this experience and philosophy culminates in my overarching life goal: To be helpful.
A lot of people have a lot of problems, and somehow I plan on solving at least one of them.</p>

<p>This is me. And I can be very helpful.</p>
]]></content>
  </entry>
  
</feed>
