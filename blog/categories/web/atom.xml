<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Web | Zerillian Engineering]]></title>
  <link href="http://blog.zerilliworks.net/blog/categories/web/atom.xml" rel="self"/>
  <link href="http://blog.zerilliworks.net/"/>
  <updated>2013-04-03T11:22:38-04:00</updated>
  <id>http://blog.zerilliworks.net/</id>
  <author>
    <name><![CDATA[Armand Zerilli]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Blade Extensions in Laravel]]></title>
    <link href="http://blog.zerilliworks.net/blog/2013/04/03/blade-extensions-in-laravel/"/>
    <updated>2013-04-03T10:42:00-04:00</updated>
    <id>http://blog.zerilliworks.net/blog/2013/04/03/blade-extensions-in-laravel</id>
    <content type="html"><![CDATA[<p>This one took me a little while to figure out, since it’s not particularly well documented. In Laravel, it’s possible to extend the syntax of the Blade template language with your own statements. I heard it mentioned once, and found a few functions <a href="http://laravel.com/api/source-class-Laravel.Blade.html#75">in the API documentation</a> which led me to creating customized Blade statements.</p>

<!--more-->


<h2>It's Not That Difficult.</h2>

<p>Blade has a variety of built-in statements to manage the logic and rendering of your templates. At its core, Blade simply translates these statements into regular PHP. For example:</p>

<pre><code>
@if(Session::has(‘login-errors’))
&lt;div class=”alert”&gt;&lt;h2&gt;Uh-oh! {{ Session::get(‘login-errors’) }} &lt;/h2&gt;&lt;/div&gt;
@endif

</code></pre>

<p>This set of statements looks in the Session for any login errors and displays them. Here, we used Blade’s <code>{{ }}</code> syntax for echoing statements, and the <code>@if</code> and <code>@endif</code> statements to make a decision. Once touched by Blade, it looks like this:</p>

<pre><code>&lt;?php if(Session::has(‘login-errors’)): ?&gt;
&lt;div class=”alert”&gt;&lt;h2&gt;Uh-oh! &lt;?php echo Session::get(‘login-errors’) ?&gt;&lt;/h2&gt;&lt;/div&gt;
&lt;?php endif; ?&gt;
</code></pre>

<p>There’s nothing too special about it now. It’s plain, regularly parseable PHP. Adding a Blade extension only means adding a few such substitutions yourself.</p>

<p>To register a Blade extension, you do this:</p>

<pre><code>Blade::extend(function($view) {
    // Statement code...
});
</code></pre>

<p><code>Blade::extend()</code> adds a closure function onto a stack of functions through which a view is run during the rendering process. All of the typical Blade statements are <a href="http://laravel.com/api/source-class-Laravel.Blade.html#186">defined in a similar manner.</a> The view is examined and all instances of <code>@if</code> are replaced with <code>&lt;?php if(): ?&gt;</code>, instances of <code>@render()</code> are replaced with <code>&lt;?php echo render() ?&gt;</code>, etc.</p>

<p>The <code>$view</code> variable will contain a plain text version of the view to be rendered, and the closure defined will perform the replacement of the custom Blade syntax with PHP statements. Both of these are handled as strings.</p>

<h2>Markup Extensions</h2>

<p>You could add custom Blade statements as a compact syntax for elements you frequently use. Let’s say you use a lot of Zurb Foundation’s progress bar components. You’d register the Blade extension like this:</p>

<pre><code>Blade::extend(function ($view) {
$html = "&lt;div class=\"progress\"&gt;&lt;span class=\"meter\"&gt;&lt;/span&gt;&lt;/div&gt;";
return str_replace("@progressbar", $html, $view);
});
</code></pre>

<p>And now, <code>@progressbar</code> becomes...</p>

<p><code>&lt;div class=”progress”&gt;&lt;span class=”meter”&gt;&lt;/span&gt;&lt;/div&gt;</code></p>

<p>Although that’s not particularly useful, since we can’t set the progress of the progress bar. Let’s tweak that Blade extension.</p>

<pre><code>Blade::extend(function ($view) {
$html = "&lt;div class=\"progress\"&gt;&lt;span class=\"meter\" style=\"width: $1%\"&gt;&lt;/span&gt;&lt;/div&gt;";
return preg_replace("#\s*@progressbar\(\s*([0-9]*)\s*\)#", $html, $view);
});
</code></pre>

<p>So if we use these:</p>

<pre><code>&lt;div class="row"&gt;
    &lt;div class="small-12 columns"&gt;
        @progressbar(75)
        @progressbar(10)
        @progressbar(43)
        @progressbar(100)
    &lt;/div&gt;
&lt;/div&gt;
</code></pre>

<p>We end up with this:</p>

<p><img class="center" src="/images/articles/blade-extensions-in-laravel/progressbars.png"></p>

<p>Now, we can use <code>@progressbar(XX%)</code> to specify a progress bar showing partial completion. It’s now possible to specify a percentage which the progress bar should represent. The closure extracts the number from our custom statement and uses it to set the CSS width property of the “meter” class element.</p>

<p>If you’re not too familiar with regular expressions, read up a bit on Wikipedia. A basic understanding isn't too difficult to attain, and it's logically straightforward to learn their proper use. The most important part is that this expression...</p>

<pre><code>\s*@progressbar\(\s*([0-9]*)\s*\)
</code></pre>

<p>...extracts the numbers as a sub-expression. These numbers are inserted into the <code>$1</code> symbol in the replacement text.</p>

<p>Simple string manipulation functions like <code>str_replace</code> (<a href="http://www.php.net/manual/en/function.str-replace.php">docs</a>) work well for one-off replacements like inserting static PHP code, but regex-capable functions such as <code>preg_replace</code> (<a href="http://www.php.net/manual/en/function.preg-replace.php">docs</a>) are necessary if you're including some arguments or modifiers that require a RegEx to find and replace.</p>

<h2>Functional Extensions</h2>

<p>In this example, I'll use the <a href="http://bundles.laravel.com/bundle/Browser">Laravel Browser bundle</a> to identify mobile users, and add some Blade extensions to change the rendering of templates for them.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>routes.php </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">&amp;lt;?php&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;IoC::singleton(&#39;Browser&#39;, function()</span>
</span><span class='line'><span class="x">{&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;pre&gt;&lt;code&gt;return new Browser($_SERVER[&#39;HTTP_USER_AGENT&#39;]);</span>
</span><span class='line'><span class="x">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;});&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;//      @mobile statement               ///////////////////////////////////////////</span>
</span><span class='line'><span class="x">Blade::extend(function($view)</span>
</span><span class='line'><span class="x">{&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;pre&gt;&lt;code&gt;return str_replace(&#39;@mobile&#39;, &quot;&amp;lt;?php if(IoC::resolve(&#39;Browser&#39;)-&amp;gt;isMobile()): ?&amp;gt;&quot;, $view);</span>
</span><span class='line'><span class="x">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;});&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;//      @endmobile statement            ///////////////////////////////////////////</span>
</span><span class='line'><span class="x">Blade::extend(function($view)</span>
</span><span class='line'><span class="x">{&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;pre&gt;&lt;code&gt;return str_replace(&#39;@endmobile&#39;, &quot;&amp;lt;?php endif; ?&amp;gt;&quot;, $view);</span>
</span><span class='line'><span class="x">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;});&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;//      @desktop statement              ///////////////////////////////////////////</span>
</span><span class='line'><span class="x">Blade::extend(function ($view) {&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;pre&gt;&lt;code&gt;return str_replace(&#39;@desktop&#39;, &quot;&amp;lt;?php if(!IoC::resolve(&#39;Browser&#39;)-&amp;gt;isMobile()): ?&amp;gt;&quot;, $view);</span>
</span><span class='line'><span class="x">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;});&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;//      @enddesktop statement           ///////////////////////////////////////////</span>
</span><span class='line'><span class="x">Blade::extend(function ($view) {&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;pre&gt;&lt;code&gt;return str_replace(&#39;@enddesktop&#39;, &quot;&amp;lt;?php endif; ?&amp;gt;&quot;, $view);</span>
</span><span class='line'><span class="x">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;});&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;// Your regular routes</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The first operation registers an instance of the Browser class in the IoC container (<a href="http://laravel.com/docs/ioc">docs</a>). Browser is used to determine what user agent the client is running. In this case, it’s to distinguish users on desktop computers from users on phones and tablets. The IoC container handily keeps this instance ready for us. The code that follows registers the various Blade extensions with Laravel. There are four extensions illustrated here:</p>

<ul>
<li><code>@mobile</code></li>
<li><code>@endmobile</code></li>
<li><code>@desktop</code></li>
<li><code>@enddesktop</code></li>
</ul>


<p>The <code>@desktop</code> and <code>@enddesktop</code> statements will only render content between them if the user is on a desktop PC. This might be used to add sidebars or extra navigation material only on desktops, where there’s enough space to add such elements. <code>@mobile</code> and <code>@endmobile</code> do the same thing for mobile devices. These might be used to add sections of sites for mobile users, such as compact dashboards that are more suitable for phones and tablets. They also work with the <code>@else</code> Blade statement, since they’re really just PHP if statements. Nothing all that special about them.</p>

<p>I've mocked up a Blade template for a user's dashboard on a food-tracking website. It's a bit lengthy, but it'll show you how to conditionally change content with Blade statements. In here, mobile users will see a condensed dashboard with large buttons, while desktop users will see a quick-add form, a search box, and a list of recent eats by friends. They also see different navigation components.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Using the mobile Blade extensions </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="ni">&amp;lt;</span>!DOCTYPE HTML&gt;
</span><span class='line'><span class="nt">&lt;head&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>title<span class="ni">&amp;gt;</span>An Absolutely Incredible Food App<span class="ni">&amp;lt;</span>/title<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span>@mobile
</span><span class='line'><span class="ni">&amp;lt;</span>h1<span class="ni">&amp;gt;</span>Welcome to our mobile site.<span class="ni">&amp;lt;</span>/h1<span class="ni">&amp;gt;</span>
</span><span class='line'>@endmobile
</span><span class='line'>@desktop
</span><span class='line'><span class="ni">&amp;lt;</span>h1<span class="ni">&amp;gt;</span>Welcome to our site.<span class="ni">&amp;lt;</span>/h1<span class="ni">&amp;gt;</span>
</span><span class='line'>@enddesktop
</span><span class='line'>
</span><span class='line'>@mobile
</span><span class='line'><span class="ni">&amp;lt;</span>dl class=&quot;sub-nav&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>dt<span class="ni">&amp;gt;</span>Filter:<span class="ni">&amp;lt;</span>/dt<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>dd<span class="ni">&amp;gt;&amp;lt;</span>a href=&quot;#&quot;<span class="ni">&amp;gt;</span>All<span class="ni">&amp;lt;</span>/a<span class="ni">&amp;gt;&amp;lt;</span>/dd<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>dd<span class="ni">&amp;gt;&amp;lt;</span>a href=&quot;#&quot;<span class="ni">&amp;gt;</span>Tasty<span class="ni">&amp;lt;</span>/a<span class="ni">&amp;gt;&amp;lt;</span>/dd<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>dd<span class="ni">&amp;gt;&amp;lt;</span>a href=&quot;#&quot;<span class="ni">&amp;gt;</span>Yucky<span class="ni">&amp;lt;</span>/a<span class="ni">&amp;gt;&amp;lt;</span>/dd<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>dd<span class="ni">&amp;gt;&amp;lt;</span>a href=&quot;#&quot;<span class="ni">&amp;gt;</span>Friends<span class="ni">&amp;lt;</span>/a<span class="ni">&amp;gt;&amp;lt;</span>/dd<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/dl<span class="ni">&amp;gt;</span>
</span><span class='line'>@endmobile
</span><span class='line'>
</span><span class='line'>@desktop
</span><span class='line'><span class="ni">&amp;lt;</span>ul class=&quot;side-nav&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>li<span class="ni">&amp;gt;&amp;lt;</span>a href=&quot;#&quot;<span class="ni">&amp;gt;</span>All Foods<span class="ni">&amp;lt;</span>/a<span class="ni">&amp;gt;&amp;lt;</span>/li<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>li<span class="ni">&amp;gt;&amp;lt;</span>a href=&quot;#&quot;<span class="ni">&amp;gt;</span>Tasty Foods<span class="ni">&amp;lt;</span>/a<span class="ni">&amp;gt;&amp;lt;</span>/li<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>li<span class="ni">&amp;gt;&amp;lt;</span>a href=&quot;#&quot;<span class="ni">&amp;gt;</span>Yucky Foods<span class="ni">&amp;lt;</span>/a<span class="ni">&amp;gt;&amp;lt;</span>/li<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>li<span class="ni">&amp;gt;&amp;lt;</span>a href=&quot;#&quot;<span class="ni">&amp;gt;</span>Friend&#39;s Foods<span class="ni">&amp;lt;</span>/a<span class="ni">&amp;gt;&amp;lt;</span>/li<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/ul<span class="ni">&amp;gt;</span>
</span><span class='line'>@enddesktop
</span><span class='line'>
</span><span class='line'>@mobile
</span><span class='line'><span class="ni">&amp;lt;</span>h3<span class="ni">&amp;gt;</span>Mobile Dashboard<span class="ni">&amp;lt;</span>/h3<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>div class=&quot;buttons&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>a href=&quot;http://blog.zerilliworks.net/food/add&quot;<span class="ni">&amp;gt;</span>Add Something You Ate<span class="ni">&amp;lt;</span>/a<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>a href=&quot;http://blog.zerilliworks.net/friends/foods&quot;<span class="ni">&amp;gt;</span>What Your Friends Ate<span class="ni">&amp;lt;</span>/a<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>a href=&quot;http://blog.zerilliworks.net/list&quot;<span class="ni">&amp;gt;</span>Eat List<span class="ni">&amp;lt;</span>/a<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>a href=&quot;http://blog.zerilliworks.net/messages&quot;<span class="ni">&amp;gt;</span>Messages<span class="ni">&amp;lt;</span>/a<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/div<span class="ni">&amp;gt;</span>
</span><span class='line'>@endmobile
</span><span class='line'>
</span><span class='line'>@desktop
</span><span class='line'><span class="ni">&amp;lt;</span>h3<span class="ni">&amp;gt;</span>Your Dashboard<span class="ni">&amp;lt;</span>/h3<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>form<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>input type=&quot;text&quot; name=&quot;new_food&quot; placeholder=&quot;Put in a new food...&quot;/<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>button type=&quot;submit&quot;<span class="ni">&amp;gt;</span>Add it!<span class="ni">&amp;lt;</span>/button<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/form<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>form<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>input type=&quot;text&quot; name=&quot;search_foods&quot; placeholder=&quot;Search for a food...&quot;/<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>button type=&quot;submit&quot;<span class="ni">&amp;gt;</span>Find it!<span class="ni">&amp;lt;</span>/button<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/form<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'><span class="ni">&amp;lt;</span>table<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>thead<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>tr<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>th<span class="ni">&amp;gt;</span>Date<span class="ni">&amp;lt;</span>/th<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>th<span class="ni">&amp;gt;</span>Recent Food<span class="ni">&amp;lt;</span>/th<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>th<span class="ni">&amp;gt;</span>Eaten By<span class="ni">&amp;lt;</span>/th<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>th<span class="ni">&amp;gt;</span>YUMS and YUCKS<span class="ni">&amp;lt;</span>/th<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/tr<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/thead<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>tbody<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>tr<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>td<span class="ni">&amp;gt;</span>Just Now<span class="ni">&amp;lt;</span>/td<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>td<span class="ni">&amp;gt;</span>Pineapple Pizza<span class="ni">&amp;lt;</span>/td<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>td<span class="ni">&amp;gt;</span>J. Kyle<span class="ni">&amp;lt;</span>/td<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>td<span class="ni">&amp;gt;</span>5 YUMS and 13 YUCKS<span class="ni">&amp;lt;</span>/td<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/tr<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>tr<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>td<span class="ni">&amp;gt;</span>2 hours ago<span class="ni">&amp;lt;</span>/td<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>td<span class="ni">&amp;gt;</span>Breadsticks<span class="ni">&amp;lt;</span>/td<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>td<span class="ni">&amp;gt;</span>M. Toledo<span class="ni">&amp;lt;</span>/td<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>td<span class="ni">&amp;gt;</span>8 YUMS and 0 YUCKS<span class="ni">&amp;lt;</span>/td<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/tr<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>tr<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>td<span class="ni">&amp;gt;</span>3 hours ago<span class="ni">&amp;lt;</span>/td<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>td<span class="ni">&amp;gt;</span>Raw Eggs<span class="ni">&amp;lt;</span>/td<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>td<span class="ni">&amp;gt;</span>E. Ferguson<span class="ni">&amp;lt;</span>/td<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>td<span class="ni">&amp;gt;</span>0 YUMS and 20 YUCKS<span class="ni">&amp;lt;</span>/td<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/tr<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/tbody<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/table<span class="ni">&amp;gt;</span>
</span><span class='line'>@enddesktop
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>And after running through Blade and our custom extensions, that view looks like this:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>After rendering </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">&amp;lt;!DOCTYPE HTML&gt;</span>
</span><span class='line'><span class="x">&lt;head&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;pre&gt;&lt;code&gt;&amp;lt;title&amp;gt;An Absolutely Incredible Food App&amp;lt;/title&amp;gt;</span>
</span><span class='line'><span class="x">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;&lt;/head&gt;</span>
</span><span class='line'><span class="x">&lt;body&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;pre&gt;&lt;code&gt;&amp;lt;?php if(IoC::resolve(&#39;Browser&#39;)-&amp;gt;isMobile()): ?&amp;gt;</span>
</span><span class='line'><span class="x">&amp;lt;h1&amp;gt;Welcome to our mobile site.&amp;lt;/h1&amp;gt;</span>
</span><span class='line'><span class="x">&amp;lt;?php endif; ?&amp;gt;</span>
</span><span class='line'><span class="x">&amp;lt;?php if(!IoC::resolve(&#39;Browser&#39;)-&amp;gt;isMobile()): ?&amp;gt;</span>
</span><span class='line'><span class="x">&amp;lt;h1&amp;gt;Welcome to our site.&amp;lt;/h1&amp;gt;</span>
</span><span class='line'><span class="x">&amp;lt;?php endif; ?&amp;gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="x">&amp;lt;?php if(IoC::resolve(&#39;Browser&#39;)-&amp;gt;isMobile()): ?&amp;gt;</span>
</span><span class='line'><span class="x">&amp;lt;dl class=&quot;sub-nav&quot;&amp;gt;</span>
</span><span class='line'><span class="x">  &amp;lt;dt&amp;gt;Filter:&amp;lt;/dt&amp;gt;</span>
</span><span class='line'><span class="x">  &amp;lt;dd&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;All&amp;lt;/a&amp;gt;&amp;lt;/dd&amp;gt;</span>
</span><span class='line'><span class="x">  &amp;lt;dd&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;Tasty&amp;lt;/a&amp;gt;&amp;lt;/dd&amp;gt;</span>
</span><span class='line'><span class="x">  &amp;lt;dd&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;Yucky&amp;lt;/a&amp;gt;&amp;lt;/dd&amp;gt;</span>
</span><span class='line'><span class="x">  &amp;lt;dd&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;Friends&amp;lt;/a&amp;gt;&amp;lt;/dd&amp;gt;</span>
</span><span class='line'><span class="x">&amp;lt;/dl&amp;gt;</span>
</span><span class='line'><span class="x">&amp;lt;?php endif; ?&amp;gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&amp;lt;?php if(!IoC::resolve(&#39;Browser&#39;)-&amp;gt;isMobile()): ?&amp;gt;</span>
</span><span class='line'><span class="x">&amp;lt;ul class=&quot;side-nav&quot;&amp;gt;</span>
</span><span class='line'><span class="x">  &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;All Foods&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;</span>
</span><span class='line'><span class="x">  &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;Tasty Foods&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;</span>
</span><span class='line'><span class="x">  &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;Yucky Foods&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;</span>
</span><span class='line'><span class="x">  &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;Friend&#39;s Foods&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;</span>
</span><span class='line'><span class="x">&amp;lt;/ul&amp;gt;</span>
</span><span class='line'><span class="x">&amp;lt;?php endif; ?&amp;gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&amp;lt;?php if(IoC::resolve(&#39;Browser&#39;)-&amp;gt;isMobile()): ?&amp;gt;</span>
</span><span class='line'><span class="x">&amp;lt;h3&amp;gt;Mobile Dashboard&amp;lt;/h3&amp;gt;</span>
</span><span class='line'><span class="x">&amp;lt;div class=&quot;buttons&quot;&amp;gt;</span>
</span><span class='line'><span class="x">    &amp;lt;a href=&quot;http://blog.zerilliworks.net/food/add&quot;&amp;gt;Add Something You Ate&amp;lt;/a&amp;gt;</span>
</span><span class='line'><span class="x">    &amp;lt;a href=&quot;http://blog.zerilliworks.net/friends/foods&quot;&amp;gt;What Your Friends Ate&amp;lt;/a&amp;gt;</span>
</span><span class='line'><span class="x">    &amp;lt;a href=&quot;http://blog.zerilliworks.net/list&quot;&amp;gt;Eat List&amp;lt;/a&amp;gt;</span>
</span><span class='line'><span class="x">    &amp;lt;a href=&quot;http://blog.zerilliworks.net/messages&quot;&amp;gt;Messages&amp;lt;/a&amp;gt;</span>
</span><span class='line'><span class="x">&amp;lt;/div&amp;gt;</span>
</span><span class='line'><span class="x">&amp;lt;?php endif; ?&amp;gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&amp;lt;?php if(!IoC::resolve(&#39;Browser&#39;)-&amp;gt;isMobile()): ?&amp;gt;</span>
</span><span class='line'><span class="x">&amp;lt;h3&amp;gt;Your Dashboard&amp;lt;/h3&amp;gt;</span>
</span><span class='line'><span class="x">&amp;lt;form&amp;gt;</span>
</span><span class='line'><span class="x">    &amp;lt;input type=&quot;text&quot; name=&quot;new_food&quot; placeholder=&quot;Put in a new food...&quot;/&amp;gt;</span>
</span><span class='line'><span class="x">    &amp;lt;button type=&quot;submit&quot;&amp;gt;Add it!&amp;lt;/button&amp;gt;</span>
</span><span class='line'><span class="x">&amp;lt;/form&amp;gt;</span>
</span><span class='line'><span class="x">&amp;lt;form&amp;gt;</span>
</span><span class='line'><span class="x">    &amp;lt;input type=&quot;text&quot; name=&quot;search_foods&quot; placeholder=&quot;Search for a food...&quot;/&amp;gt;</span>
</span><span class='line'><span class="x">    &amp;lt;button type=&quot;submit&quot;&amp;gt;Find it!&amp;lt;/button&amp;gt;</span>
</span><span class='line'><span class="x">&amp;lt;/form&amp;gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&amp;lt;table&amp;gt;</span>
</span><span class='line'><span class="x">    &amp;lt;thead&amp;gt;</span>
</span><span class='line'><span class="x">        &amp;lt;tr&amp;gt;</span>
</span><span class='line'><span class="x">            &amp;lt;th&amp;gt;Date&amp;lt;/th&amp;gt;</span>
</span><span class='line'><span class="x">            &amp;lt;th&amp;gt;Recent Food&amp;lt;/th&amp;gt;</span>
</span><span class='line'><span class="x">            &amp;lt;th&amp;gt;Eaten By&amp;lt;/th&amp;gt;</span>
</span><span class='line'><span class="x">            &amp;lt;th&amp;gt;YUMS and YUCKS&amp;lt;/th&amp;gt;</span>
</span><span class='line'><span class="x">        &amp;lt;/tr&amp;gt;</span>
</span><span class='line'><span class="x">    &amp;lt;/thead&amp;gt;</span>
</span><span class='line'><span class="x">    &amp;lt;tbody&amp;gt;</span>
</span><span class='line'><span class="x">        &amp;lt;tr&amp;gt;</span>
</span><span class='line'><span class="x">            &amp;lt;td&amp;gt;Just Now&amp;lt;/td&amp;gt;</span>
</span><span class='line'><span class="x">            &amp;lt;td&amp;gt;Pineapple Pizza&amp;lt;/td&amp;gt;</span>
</span><span class='line'><span class="x">            &amp;lt;td&amp;gt;J. Kyle&amp;lt;/td&amp;gt;</span>
</span><span class='line'><span class="x">            &amp;lt;td&amp;gt;5 YUMS and 13 YUCKS&amp;lt;/td&amp;gt;</span>
</span><span class='line'><span class="x">        &amp;lt;/tr&amp;gt;</span>
</span><span class='line'><span class="x">        &amp;lt;tr&amp;gt;</span>
</span><span class='line'><span class="x">            &amp;lt;td&amp;gt;2 hours ago&amp;lt;/td&amp;gt;</span>
</span><span class='line'><span class="x">            &amp;lt;td&amp;gt;Breadsticks&amp;lt;/td&amp;gt;</span>
</span><span class='line'><span class="x">            &amp;lt;td&amp;gt;M. Toledo&amp;lt;/td&amp;gt;</span>
</span><span class='line'><span class="x">            &amp;lt;td&amp;gt;8 YUMS and 0 YUCKS&amp;lt;/td&amp;gt;</span>
</span><span class='line'><span class="x">        &amp;lt;/tr&amp;gt;</span>
</span><span class='line'><span class="x">        &amp;lt;tr&amp;gt;</span>
</span><span class='line'><span class="x">            &amp;lt;td&amp;gt;3 hours ago&amp;lt;/td&amp;gt;</span>
</span><span class='line'><span class="x">            &amp;lt;td&amp;gt;Raw Eggs&amp;lt;/td&amp;gt;</span>
</span><span class='line'><span class="x">            &amp;lt;td&amp;gt;E. Ferguson&amp;lt;/td&amp;gt;</span>
</span><span class='line'><span class="x">            &amp;lt;td&amp;gt;0 YUMS and 20 YUCKS&amp;lt;/td&amp;gt;</span>
</span><span class='line'><span class="x">        &amp;lt;/tr&amp;gt;</span>
</span><span class='line'><span class="x">    &amp;lt;/tbody&amp;gt;</span>
</span><span class='line'><span class="x">&amp;lt;/table&amp;gt;</span>
</span><span class='line'><span class="x">&amp;lt;?php endif; ?&amp;gt;</span>
</span><span class='line'><span class="x">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;&lt;/body&gt;</span>
</span><span class='line'><span class="x">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>When creating Blade extensions, you can use whatever string modification function you’d like as long as it returns <code>$view</code> in full. Unless, I suppose, you want to clip out chunks of the view's data. Can't come up with a practical case in which that would help, but who knows? Just remember that you're modifying the <em>whole view before it's rendered</em>, so be careful not to have any runaway regexes or imprecise matching.</p>

<p>You can also feel pretty free to add Blade extensions to your project. Markup extensions require almost no overhead, since Laravel caches rendered pages. Functional extensions are parsed into PHP first, so they're remarkably quick to render as well. Blade extensions are a great way to save time for small snippets you use often and are more compact than rendering a partial view. I suppose you shouldn't go <em>too</em> crazy with them, or you might end up putting them together in ways that could better be served by a partial or view composer. Blade extensions should be sprinkled. If you've ended up putting most of your markup in Blade extensions you might be doing it wrong.</p>

<p>There it is. I hope this helped you figure out Blade extensions. They're really easy to use and can leverage the convenience and expression of Blade in specialized ways. You could even create a bundle that contains your favorite Blade extensions. All you'd have to do is register them in the bundle's start.php file and tell Laravel to auto-load it. Easy as Sunday morning.</p>

<p>Good luck, and happy coding.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AJAX Loading Done Right (and Wrong)]]></title>
    <link href="http://blog.zerilliworks.net/blog/2013/03/31/ajax-loading-done-right/"/>
    <updated>2013-03-31T23:17:00-04:00</updated>
    <id>http://blog.zerilliworks.net/blog/2013/03/31/ajax-loading-done-right</id>
    <content type="html"><![CDATA[<p>Oh man. This really bothers me. Some of the time, it's just not well-implemented. And when it is, I always appreciate it.</p>

<p><em>Note: For non-technical people, AJAX loading is a term for what browsers do when they load more content without needing to load another page. A good example is Facebook news feeds. I'll use it interchangeably with terms such as dynamic loading or auto loading.</em></p>

<p>A lot of websites just love to keep streaming content into your browser, sometimes as you're scrolling along. Done properly, this is a useful annoyance-relieving tool. When botched, AJAX loading is an obtuse pain in the ass. In this post, I'll look into mostly good implementations to show you the reasons these work pretty well. Usually.</p>

<!-- more -->


<p>Let me provide a real-life analogy. Click/tap on any image in this article for a full-size version.</p>

<p><a href="/images/articles/hotel-doors/checkin_notice.jpg"><img src="/images/articles/hotel-doors/checkin_notice.jpg"></a></p>

<p>That's an important notice about checkin times. Should probably read that. It's just suction-cupped to the sliding doors. But I can't quite read it from back here.</p>

<p><a href="/images/articles/hotel-doors/thats_convenient.jpg"><img class="left" src="/images/articles/hotel-doors/thats_convenient.jpg"></a></p>

<p>I could still go get up close and try to read it, but I tried and stood out of the way of the sensors and the doors closed again. This is basically no different from an improper implementation of dynamic content loading in social sites. So this is what I think of all that.</p>

<p>Firstly, you're in trouble if you think people always want to see more. I think it can be more intuitive. Assume people want to see <em>less</em> and that they will <em>ask</em> for more. Quick case study: Vimeo.</p>

<p>When you log in to Vimeo, you'll see a feed of videos added to the channels you follow in a nice little list there. It shows about ten items to start with. At the bottom, there's a link that says "Load more videos". Once you've clicked that, it turns on AJAX loading of more entries. Toggling auto loading AND limiting the information inflow? Atta boy.</p>

<p><a href="/images/articles/ajax_examples/Vimeo.png"><img class="center" src="/images/articles/ajax_examples/Vimeo.png" title="&#34;Toggling auto loading AND limiting the information inflow? Atta boy.&#34;" alt="&#34;Toggling auto loading AND limiting the information inflow? Atta boy.&#34;"></a></p>

<h3><strong>GOOD JOB, VIMEO.</strong></h3>

<p>Try being conservative. I've heard a lot of complaints about these loading methods taking up too much space, but I don't think anyone's ever complained about <em>not</em> being flooded with information. Give us the choice, please.</p>

<p>Sometimes, you can't stop it. There's no choice. You have to keep scrolling forever, until you run out of things to scroll by. Or your fingers fall off, or the friction on your scroll wheel makes it catch fire. Case Study: Facebook.</p>

<p>Facebook will always show you more. There are some handy links at the bottom of Facebook pages (like the developer links or the Help and Privacy links), but it's unlikely that you'd ever see them for more than a split second. The feed is pushing interface elements out of the way. That's a tad annoying. I mean, why even put them down there?</p>

<p><a href="/images/articles/ajax_examples/Facebook.png"><img class="center" src="/images/articles/ajax_examples/Facebook.png" title="&#34;AJAX loading is pushing interface elements out of the way. That's a tad annoying.&#34;" alt="&#34;AJAX loading is pushing interface elements out of the way. That's a tad annoying.&#34;"></a></p>

<h3><strong>CLOSE BUT NO CIGAR, FACEBOOK.</strong></h3>

<p>I've got one more positive example of sites that keep adding to pages: Myspace. The New Myspace features a radically reconstructed design, with one of the slickest web app UIs I have ever seen. I'm serious, I have never been remotely interested in Myspace until they unveiled the new design. My praise for it is worthy of another post, however.</p>

<p>The horizontal layout of the new Myspace enables nicer persistent navigation elements than your standard sticky nav bars. While scrolling horizontally through social feeds, more items are loaded on the right, where there are no controls or even optionally accessible elements to shove out of the way. Myspace consolidated their important interface element in places that were always visible. Scroll as much as you like, that navigation box isn't going anywhere. It always floats above other content and remains on the left.</p>

<p><a href="/images/articles/ajax_examples/myspace.png"><img class="center" src="/images/articles/ajax_examples/myspace.png" title="&#34;Scroll as much as you like, that navigation box isn't going anywhere.&#34;" alt="&#34;Scroll as much as you like, that navigation box isn't going anywhere.&#34;"></a></p>

<h3><strong>WAY TO BREAK THE MOLD, MYSPACE.</strong></h3>

<p>To be fair, Facebook has been sticking their blue nav bar to the top for a long time. That does help navigate, but with less granularity and flexibility than Myspace's collapsable vertical navigation lists.</p>

<p>Lemme bring up another common AJAX loading annoyance, that being live streams of things. It's sort of the inverted version of what I've been describing so far. Streaming updates are big in the social world, and pretty much every social site has them. But Tiwtter tightened the screws a bit for the sake of convenience and efficiency. Twitter just has the little "(n) new Tweets" button that you get to push to refresh your feed. I thought this should be common practice, but it has added purpose for Twitter users. If you're following a lot of people, you might get a Tweet every five seconds. Hardly enough time to read them all before they get pushed out of the way by newer ones.</p>

<p>So instead you get to read them at your leisure, load more, and read that new chunk of them. MUCH BETTER.</p>

<p>Twitter gets it right because it helps wrangle the kind of data they present. Streams of tweets should be well-controlled. Adding AJAX loading without thought can cause frustrations if you deal with data that's always trickling in. Like Twitter.</p>

<p><a href="/images/articles/ajax_examples/Twitter.png"><img class="center" src="/images/articles/ajax_examples/Twitter.png" title="&#34;Control the flow and know how much new information is about to hit.&#34;" alt="&#34;Control the flow and know how much new information is about to hit.&#34;"></a></p>

<h3><strong>SMART MOVE, TWITTER.</strong></h3>

<p>I'll do one more case study for a good implementation of streaming updates: Koding, a hip new social coding and developer network. Koding has an activity feed, a prominent one, where it encourages people to share code and ask questions, among other things. When you've got your scroll positioned at the very top a little Live Update toggle turns on. This means that as long as you're right at the top of the list, it will auto-load updates. This is good. Scrolling down even a little, however, will toggle the feature off, so no more updates stream in live and shuffle around something you may be skimming over. It allows you to control the flow of data, and that data is what we want to consume at our own pace, right?</p>

<p><a href="/images/articles/ajax_examples/Koding.png"><img class="center" src="/images/articles/ajax_examples/Koding.png" title="&#34;Being able to toggle AJAX loading helps a lot. Please do this more.&#34;" alt="&#34;Being able to toggle AJAX loading helps a lot. Please do this more.&#34;"></a></p>

<h3><strong>GOOD ON YA, KODING.</strong></h3>

<p>By the way, I'm working on a write-up of Koding, so that'll give you a better idea of how everything fits together.</p>

<p>How about some bad reasons to use it? It certainly depends on the nature of the content you provide. Social sites love it because data is always coming in, and they can't be certain of how much you've seen and what you've missed. So why not let you keep rolling until you've had your fill? Sensible enough. I picked at Facebook because they still had a footer. Seriously, they are mutually exclusive. Why even have something that just gets bumped all the time?</p>

<p>It also puts a burden on the client. The browser is in charge of managing everything, and if you leave Facebook open for a long time, you might find your browser getting a bit sluggish. It adds a lot of complexity for sometimes marginal gain.</p>

<p>If you're not careful, it can also break the flow of a reader's traversal through information. Most AJAX-loading sites don't pick up where you left off if you click a link and go back. If your site has you jumping in and out of links, like on an infinite-scrolling tumblr blog, it can break. You get capped at the initial end of the page as the browser tries to scroll back down to where you were.</p>

<p>Auto-loading blog posts is typically bad practice, so I think.</p>

<p>Another worry is making your content grey. Generic and blended together. Nondistinct. Pinterest suffers this, and <a href="http://mcfunley.com/design-for-continuous-experimentation">so did Etsy for a while</a> (skip to slide 25.) Infinite scrolling establishes <em>momentum</em>, meaning users get rolling and look at each piece of data for a fraction of a second. It's hard to tell stuff apart. It's possible to fly by thousands of items and really only see a handful. It encourages haste, and that leads to minimal engagement.</p>

<p>If your implementation of infinite scrolling pushes away interface elements, fuses elements into a blur of unremarkability, or breaks a clean traversal of references and links, you might need to re-think it. Essentially, support your data and the behavior of your users.</p>

<p>One last case I'll mention: Google.</p>

<p>Google's search results don't auto-load. Web results, anyway. They're still paginated the old-fashioned way. Why? Because AJAX loading is a feature that only a minuscule proportion of Googlers would ever need. How often does the proper result of a search come up on anything but the first page? For me, almost never. Google is confident enough to assume that you'll almost never need to zip through long lists of results.</p>

<p>By contrast, users of DuckDuckGo see that search results are auto-loaded as you scroll. This is because, while DDG is pretty good, its results tend to be less relevant than Google. People need to scroll more, so the site supports that behavior.</p>

<p>C'mon, guys. It's not actually that hard. Make the flow of data support the behavior of your users and the type of content you deliver. Sometimes, just don't use it. Why is pagination so bad? What ever happened to getting to pick the number of results per page? Really, what was so terrible about that? I think we just got a little caught up with the ability to avoid page reloads.</p>

<p><a href="/images/articles/ajax_examples/Google.png"><img class="center" src="/images/articles/ajax_examples/Google.png" title="&#34;Was pagination so terrible?&#34;" alt="&#34;Was pagination so terrible?&#34;"></a></p>

<p>Seriously. Is this actually such a horrible thing? I doubt it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cry Me a River, Emails]]></title>
    <link href="http://blog.zerilliworks.net/blog/2013/03/26/cry-me-a-river-emails/"/>
    <updated>2013-03-26T00:59:00-04:00</updated>
    <id>http://blog.zerilliworks.net/blog/2013/03/26/cry-me-a-river-emails</id>
    <content type="html"><![CDATA[<h3>Or: Why You Should NEVER Make Robots Fake Sincerity</h3>

<p>While helping a friend construct a website, I signed up for Weebly. I didn't even have a website, I was just a collaborator. I didn't want anything to do with Weebly. For some reason, she began getting uncomfortably clingy. Look at this as an example of how to creep out your customers.</p>

<!-- more -->


<p>I'll be clear now that I do not like drag-and-drop site builders. Only one such service have I ever described in terms that may be optimistically construed as "fond" -- that service being Squarespace. And that's only because they opened up their internals to developers.</p>

<p>So have a look at this.</p>

<p><img src="/images/articles/Weebly-Believing.png" title="Don't stop believin' (in your website)" ></p>

<p><a href="/extras/weebly-believing.html/">If you can't see the image, click here for the text version.</a></p>

<p>The time since I signed up is probably the second worst thing about this. It's just odd. It reminds me that there is some task somewhere (clearly not a human) that is looking over less-than-frequently-active accounts and telling them to get going. It's unbelievably insincere, and it's frankly a little condescending. How so?</p>

<blockquote><p>Maybe you got busy and forgot about your website. We understand. When you signed up you probably had a vision for your site. We want to help you make that a reality. We promise that Weebly truly is the easiest way to create a website.</p></blockquote>

<p>Of course I had a vision. Perhaps I own a business, I sell goods, I'm an artist, I'm a traveller, I'm a game show contestant with a penchant for blogging. What's gonna matter is my content. If I'm passionate enough, I'll find the best way to present it. I am disinclined to believe that anyone who has any real desire to run a website would forget about it for 29 days, 16 hours, 7 minutes and 47 seconds.</p>

<p>This helpful message is a little too chummy. It is certainly not sincerely endorsed by the Weebly Team, it was sent by a robot that's been told how to sound friendly. A person wrote generic text without much thought and I was on the receiving end of a template engine fed with those words. Nothing really makes me feel less cared for than robots acting like people. Giving them a little personality can be okay, but this is kind of insulting. Is your team actually nervous that I might not realize the full potential of my business? That's something investors worry about. And something robots think nothing of.</p>

<p>Then this happens:</p>

<p><img src="/images/articles/Weebly-Sniffle.png" title="Sniffle. Sniffle..." ></p>

<p><a href="/extras/weebly-sniffle.html/">If you can't see the image, click here for the text version.</a></p>

<p>The subject of this message was literally "That's sad." No, this email is the sad thing. You trained machines to sound sympathetic, and it's just unsettling to make them cry. <em>For the love of God, knock it off.</em> There's nothing wrong with the concept of automated messages. But <em>please</em> do not make them f--king cry. That does not make me feel cared for. Your team doesn't seem to be there for me, it seems like you need to clutch your flaky customers in a death grip.</p>

<p>Don't fret though, you fantastically sincere liars, I think this email could be fixed pretty easily.</p>

<p><img src="/images/articles/Weebly-Sniffle-fixed.png" title="Just take a Sharpie to it." ></p>

<p>There. That's basically free advice, Weebly. If your team is feeling sincere and nervous and sympathetic, my typical consulting fee is $17,000.</p>

<p>For the record, one of their founders eventually sent me a personal email asking for feedback. Way to go, fellas. That's where you lay on the charm, in the actual exchanges between actual people. That redeemed their support team a bit. That was someone who was really wondering what went wrong and wanted to find a solution. I'm not being sarcastic there, if you're looking to connect with a customer, a real live human being is the way to do it. I absolutely love that.</p>

<p>Sending automated emails that cry is tantamount to deception. That's what I have to say to them.</p>

<p>I can't be the only person that feels this way. I very highly value genuine interactions, and pretty much any attempt to imbue emotion without real effort is simply insulting to me.</p>

<p>Seriously, without the mendacious nervousness and sniffles, these would be just helpful emails. I might have read them without rolling my eyes.</p>

<p>If you're someone who also dislikes this sort of indiscretion, I'd appreciate a comment so I know I'm not alone.</p>

<p>Also, if you happen to be an English professor and would like to tell me whether I should have used <em>whom</em> in that last sentence, I would appreciate it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why Octopress?]]></title>
    <link href="http://blog.zerilliworks.net/blog/2013/03/16/why-octopress/"/>
    <updated>2013-03-16T14:40:00-04:00</updated>
    <id>http://blog.zerilliworks.net/blog/2013/03/16/why-octopress</id>
    <content type="html"><![CDATA[<p>I could have just tossed a WordPress installation up somewhere. It probably would have taken less time
to set up. But I'm not a big fan of WordPress. I'm not a big fan of anything that needs extra plugins to
be reasonably secure. I like fast and simple. AND NOW HERE I AM.</p>

<!-- more -->


<p>Any seasoned (or even soft-boiled) developer realizes the potential of the terminal. I'm not an average
web user. I shouldn't have to learn the lingo of the CMS du-jour. if I want to build a good site or blog. I
should be able to use basically three skills: Git, Markdown, and the terminal. No dicking through page
after page of backend material. I already know these things, and they have proven themselves as my most
enjoyable tools to use.</p>

<p>I also wanted this blog to be fast. Software like WordPress, Movable Type, MojoMotor, Drupal... They're
burdened with significant overhead of processing and delivering pages. Some have plugins to help, but
I think that we shouldn't even need them. Why would you ship a slow product and have third parties make
it safe and efficient? Seems like skipping a step.&dagger;</p>

<p>I don't want to pick on WordPress too much. Automattic is a neat company and deserves respect for making
blogging and site creation so accessible. For me, it became less efficient once I "knew better."</p>

<p>So here I am working with Octopress. I get to tap out Markdown without needing a web-based WYSIWYG editor
and type a command to send everything up to the free Github Pages service. This blog is what I'd call
"TV Magic." Like on cooking shows. All of the same things happen here that would happen on a dynamic
site, just done beforehand so they come out quick. Similar to the ways Emeril Lagasse has his roasts
roasting an hour before the show. Just when they're ready, it's <em>Bam</em> and we have dinner.</p>

<p>Octopress is wonderful software, and definite props to Brandon Mathis for his work making Jekyll friendly.
Good sir, you're the only reason I actually had enough fun putting up a blog to... Well, put up a blog.</p>

<p><a href="http://octopress.org">Octopress - A blogging framework for hackers</a></p>

<p>At the end of the day, roasting my roasts in advance means low overhead, faster requests, and simple
hosting. I'm a PHP programmer for sure, and I know there are things PHP and its derivative frameworks
are good at.</p>

<p>Simple blogging just isn't putting PHP's best foot forward.</p>

<p>&dagger; <em>Yeah, ORACLE.</em></p>

<p><em>Note: Edited for spelling/grammar on March 21, 2013</em></p>
]]></content>
  </entry>
  
</feed>
